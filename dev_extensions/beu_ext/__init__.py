from aiogram.dispatcher import FSMContext
from aiogram.types import Message, InlineKeyboardButton

from api.state.auto.auto_states import AutoIntState, AutoStringState
from api.state.state_with_buttons import StateWithButtons
from api.state.wrapped_states_group import WrappedStatesGroup

from . import test_fn

vaping_times = ["–º–µ–Ω—å—à–µ –≥–æ–¥–∞", "1 –≥–æ–¥", "–±–æ–ª—å—à–µ –≥–æ–¥–∞", "–±–æ–ª—å—à–µ –¥–≤—É—Ö –ª–µ—Ç"]


class ProfileForm(WrappedStatesGroup):
    name = AutoStringState("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    age = AutoIntState("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

    @staticmethod
    @age.value_checker()
    async def age_checker(value: any, message: Message, ctx: FSMContext):
        if value is not None and value < 18:
            await message.reply("–¢–µ–±–µ –µ—â–µ –Ω–µ—Ç 18, –ø–∏–∑–¥—é–∫!")

            return False

        return True

    vape_model = AutoStringState("–£–∫–∞–∂–∏ –º–æ–¥–µ–ª—å —Å–≤–æ–µ–≥–æ –≤–µ–π–ø–∞ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω —É —Ç–µ–±—è, –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ, "
                                 "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.", optional=True)
    vaping_time = StateWithButtons("–£–∫–∞–∂–∏ —Å–∫–æ–ª—å–∫–æ —Ç—ã —É–∂–µ –ø–∞—Ä–∏—à—å",
                                   InlineKeyboardButton(text="üü¢ –ú–µ–Ω—å—à–µ –≥–æ–¥–∞"),
                                   InlineKeyboardButton(text="üü° –ì–æ–¥"),
                                   InlineKeyboardButton(text="üü• –ë–æ–ª—å—à–µ –≥–æ–¥–∞"),
                                   InlineKeyboardButton(text="‚ö∞Ô∏è –ë–æ–ª—å—à–µ –¥–≤—É—Ö –ª–µ—Ç"), use_int_ids=True)


@ProfileForm.function(menu="‚úçÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
async def profile(message: Message, name: str, age: int, vape_model: str, vaping_time: int):
    await message.answer("–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–∏–ª –ø—Ä–æ—Ñ–∏–ª—å!")
    await message.answer(
        f"–ò–º—è: {name}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–°—Ç–∞–∂ –ø–∞—Ä–µ–Ω–∏—è: {vaping_times[vaping_time]}\n–ú–æ–¥–µ–ª—å –≤–µ–π–ø–∞: {'–Ω–µ—Ç –¥—É–¥–∫–∏' if not vape_model else vape_model}")
