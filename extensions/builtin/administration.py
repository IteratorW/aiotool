import uuid

from aiogram.types import InlineKeyboardButton, Message, ParseMode
from aiogram.utils.deep_linking import get_start_link
from aiogram.utils.markdown import text, bold, escape_md, link, hbold, hlink

from api.menu import menu_handler
from api.menu.menu_node import MenuNode
from api.state.state_with_buttons import StateWithButtons
from api.state.wrapped_states_group import WrappedStatesGroup
from bot import main
from extensions.builtin.models import InviteEntry

admin_node = MenuNode("administration", "‚úèÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ")
menu_handler.add_node(admin_node)


class InviteForm(WrappedStatesGroup):
    flag = StateWithButtons("–£–∫–∞–∂–∏ —Ñ–ª–∞–≥–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω–≤–∞–π—Ç–∞",
                            InlineKeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞–π—Ç–ª–∏—Å—Ç"),
                            InlineKeyboardButton(text="üìù‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞–π—Ç–ª–∏—Å—Ç –∏ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º"), use_int_ids=True,
                            optional=True)


@InviteForm.function(MenuNode("whitelist_invite", "‚û°Ô∏è –°–æ–∑–¥–∞—Ç—å –∏–Ω–≤–∞–π—Ç"), admin_node)
async def invite_function(message: Message, flag: int):
    if flag is None:
        flag = -1

    if flag != -1:
        invite_id = str(uuid.uuid4())[:32]
        invite_url = await get_start_link(invite_id)

        await InviteEntry.create(code=invite_id, flag=flag)
    else:
        invite_url = await get_start_link("")

    messages = {
        -1: "–ø—Ä–æ—Å—Ç–æ–π –∏–Ω–≤–∞–π—Ç",
        0: "–∏–Ω–≤–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∞–π—Ç–ª–∏—Å—Ç",
        1: "–∏–Ω–≤–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∞–π—Ç–ª–∏—Å—Ç –∏ —Å–¥–µ–ª–∞–µ—Ç –µ–≥–æ –∞–¥–º–∏–Ω–æ–º"
    }

    await message.answer(f"""
–¢—ã —É—Å–ø–µ—à–Ω–æ —Å–¥–µ–ª–∞–ª {hbold(messages[flag])}.

{hlink(url=invite_url, title=invite_url)}

–≠—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∑–∞.
""", parse_mode=ParseMode.HTML)
