from datetime import datetime

from aiogram.types import Message, ParseMode
from aiogram.utils.markdown import hbold

from api.menu.decorators import aiotool_menu_node_handler
from api.menu.menu_node import MenuNode
from bot import main
from extensions.vaping import menu, plot
from extensions.vaping.models import VapingSettings
from extensions.vaping.monthly_puff_data import MonthlyPuffData

months = {
    1: "–Ø–Ω–≤–∞—Ä—å",
    2: "–§–µ–≤—Ä–∞–ª—å",
    3: "–ú–∞—Ä—Ç",
    4: "–ê–ø—Ä–µ–ª—å",
    5: "–ú–∞–π",
    6: "–ò—é–Ω—å",
    7: "–ò—é–ª—å",
    8: "–ê–≤–≥—É—Å—Ç",
    9: "–°–µ–Ω—Ç—è–±—Ä—å",
    10: "–û–∫—Ç—è–±—Ä—å",
    11: "–ù–æ—è–±—Ä—å",
    12: "–î–µ–∫–∞–±—Ä—å"
}


top_numbers = {
    1: "1Ô∏è‚É£",
    2: "2Ô∏è‚É£",
    3: "3Ô∏è‚É£",
    4: "4Ô∏è‚É£",
    5: "5Ô∏è‚É£"
}


@aiotool_menu_node_handler(MenuNode("vaping_self_stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ç—è–∂–µ–∫"), menu.vaping_menu)
async def self_stats_handler(message: Message):
    puff_data = await MonthlyPuffData.get_for_user(message.from_user.id)

    if puff_data is None:
        await message.reply("–ó–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü —É —Ç–µ–±—è –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–æ –∏–ª–∏ –∑–∞–ø–∏—Å–∞–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∑–∞—Ç—è–∂–µ–∫! –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞.")

        return

    await main.bot.send_photo(message.chat.id, photo=plot.get_vaping_plot([puff_data]),
                              caption=f"""
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–≤–æ–∏—Ö –∑–∞—Ç—è–∂–µ–∫ –∑–∞ {months[datetime.now().month].lower()}:
–í—Å–µ–≥–æ –∑–∞—Ç—è–∂–µ–∫: {hbold(puff_data.all_puffs)}
–í —Å—Ä–µ–¥–Ω–µ–º –∑–∞ –¥–µ–Ω—å: {hbold(puff_data.mean)}
                              """, parse_mode=ParseMode.HTML)


@aiotool_menu_node_handler(MenuNode("vaping_global_stats", "üèÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ç—è–∂–µ–∫ (–ì–ª–æ–±–∞–ª—å–Ω–∞—è)"), menu.vaping_menu)
async def global_stats_handler(message: Message):
    puff_data_list = []

    async for vaping_entry in VapingSettings.all():
        if vaping_entry.vaping_activated:
            puff_data = await MonthlyPuffData.get_for_user(vaping_entry.user_id)

            if puff_data is not None:
                puff_data_list.append(puff_data)

    if not len(puff_data_list):
        await message.reply("–ü–æ–∫–∞ —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ç–æ–ø–µ. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞.")

        return

    puff_data_list.sort(key=lambda x: x.all_puffs, reverse=True)
    puff_data_list = puff_data_list[:5]

    caption = ""

    for i, puff_data in enumerate(puff_data_list):
        caption += f"\n{top_numbers[i + 1]}. {puff_data.username} - {puff_data.all_puffs} –∑–∞—Ç—è–∂–µ–∫"

    await main.bot.send_photo(message.chat.id, photo=plot.get_vaping_plot(puff_data_list, global_chart=True),
                              caption=caption)
